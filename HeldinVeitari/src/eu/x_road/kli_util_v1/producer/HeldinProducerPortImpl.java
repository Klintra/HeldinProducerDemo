
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package eu.x_road.kli_util_v1.producer;

import java.util.logging.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.11
 * 2017-05-03T22:48:36.475+02:00
 * Generated source version: 3.1.11
 * 
 */

@javax.jws.WebService(
                      serviceName = "HeldinProducerSoapService",
                      portName = "HeldinProducerPort",
                      targetNamespace = "http://kli-util-v1.x-road.eu/producer",
                      wsdlLocation = "file:WebContent/WEB-INF/wsdl/heldinVeitari.wsdl",
                      endpointInterface = "eu.x_road.kli_util_v1.producer.HeldinProducerPortType")
                      
public class HeldinProducerPortImpl implements HeldinProducerPortType {

    private static final Logger LOG = Logger.getLogger(HeldinProducerPortImpl.class.getName());

    /* (non-Javadoc)
     * @see eu.x_road.kli_util_v1.producer.HeldinProducerPortType#listMethods(java.lang.Object body)*
     */
    public eu.x_road.xsd.x_road.ListMethodsResponse listMethods(java.lang.Object body) { 
        LOG.info("Executing operation listMethods");
        System.out.println(body);
        try {
            eu.x_road.xsd.x_road.ListMethodsResponse _return = new eu.x_road.xsd.x_road.ListMethodsResponse();
            eu.x_road.xsd.x_road.ListMethodsResponse.Response _returnResponse = new eu.x_road.xsd.x_road.ListMethodsResponse.Response();
            java.util.List<java.lang.String> _returnResponseItem = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnResponseItemVal1 = "kli-util-v1.addNumbers.v1";
            _returnResponseItem.add(_returnResponseItemVal1);
            _returnResponse.getItem().addAll(_returnResponseItem);
            _return.setResponse(_returnResponse);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see eu.x_road.kli_util_v1.producer.HeldinProducerPortType#testSystem(java.lang.Object body)*
     */
    public java.lang.Object testSystem(java.lang.Object body) { 
        LOG.info("Executing operation testSystem");
        System.out.println(body);
        try {
            java.lang.Object _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see eu.x_road.kli_util_v1.producer.HeldinProducerPortType#addNumbers(eu.x_road.kli_util_v1.producer.AddNumbers.Request request, java.lang.String consumer, java.lang.String producer, java.lang.String userId, java.lang.String id, java.lang.String service, eu.x_road.kli_util_v1.producer.AddNumbersResponse.Request request1, eu.x_road.kli_util_v1.producer.AddNumbersResponse.Response response, java.lang.String consumer1, java.lang.String producer1, java.lang.String userId1, java.lang.String id1, java.lang.String service1)*
     */
    public void addNumbers(eu.x_road.kli_util_v1.producer.AddNumbers.Request request, java.lang.String consumer, java.lang.String producer, java.lang.String userId, java.lang.String id, java.lang.String service, javax.xml.ws.Holder<eu.x_road.kli_util_v1.producer.AddNumbersResponse.Request> request1, javax.xml.ws.Holder<eu.x_road.kli_util_v1.producer.AddNumbersResponse.Response> response, javax.xml.ws.Holder<java.lang.String> consumer1, javax.xml.ws.Holder<java.lang.String> producer1, javax.xml.ws.Holder<java.lang.String> userId1, javax.xml.ws.Holder<java.lang.String> id1, javax.xml.ws.Holder<java.lang.String> service1) { 
        LOG.info("Executing operation addNumbers");
        try {
        	int firstInteger = request.getFirstInteger().intValue();
        	int secondInteger = request.getSecondInteger().intValue();
        	int result = firstInteger + secondInteger;
        	
        	eu.x_road.kli_util_v1.producer.AddNumbersResponse.Request request1Value = new eu.x_road.kli_util_v1.producer.AddNumbersResponse.Request();
            request1Value.setFirstInteger(new java.math.BigInteger(Integer.toString(firstInteger)));
            request1Value.setSecondInteger(new java.math.BigInteger(Integer.toString(secondInteger)));
            request1.value = request1Value;

            eu.x_road.kli_util_v1.producer.AddNumbersResponse.Response responseValue = new eu.x_road.kli_util_v1.producer.AddNumbersResponse.Response();
            responseValue.setResult(new java.math.BigInteger(Integer.toString(result)));
            response.value = responseValue;

            consumer1.value = consumer;
            producer1.value = producer;
            userId1.value = userId;
            id1.value = id;
            service1.value = service;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
 
}
